# Generated by Django 4.0.4 on 2022-06-06 06:03

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Address',
            fields=[
                ('ID_ADS', models.BigAutoField(primary_key=True, serialize=False, verbose_name='Address ID')),
                ('A1_ADS', models.CharField(max_length=80, verbose_name='AddressLine1')),
                ('A2_ADS', models.CharField(blank=True, max_length=80, null=True, verbose_name='AddressLine2')),
                ('A3_ADS', models.CharField(blank=True, max_length=80, null=True, verbose_name='AddressLine3')),
                ('A4_ADS', models.CharField(blank=True, max_length=80, null=True, verbose_name='AddressLine4')),
                ('CI_CNCT', models.CharField(max_length=30, verbose_name='City')),
                ('ST_CNCT', models.CharField(max_length=30, verbose_name='State')),
            ],
            options={
                'db_table': 'LO_ADS',
            },
        ),
        migrations.CreateModel(
            name='ContactMethodType',
            fields=[
                ('CD_TYP_CNCT_MTH', models.CharField(max_length=6, primary_key=True, serialize=False, verbose_name='ContactMethod Type Code')),
                ('NM_TYP_CNCT_MTH', models.CharField(max_length=40, verbose_name='Contact Method Name')),
            ],
            options={
                'db_table': 'CO_TYP_CNCT_MTH',
            },
        ),
        migrations.CreateModel(
            name='ContactPurposeType',
            fields=[
                ('CD_TYP_CNCT_PRPS', models.CharField(choices=[('LG', 'LEGAL'), ('BL', 'BILLING'), ('ST', 'SHIP_TO'), ('OR', 'OTHER'), ('SA', 'SALES_ANALYSIS')], max_length=2, primary_key=True, serialize=False, verbose_name='ContactPurpose Type Code')),
                ('NM_TYP_CNCT_PRPS', models.CharField(max_length=40, verbose_name='Name')),
            ],
            options={
                'db_table': 'CO_TYP_CNCT_PRPS',
            },
        ),
        migrations.CreateModel(
            name='EmailAddress',
            fields=[
                ('ID_EM_ADS', models.BigAutoField(primary_key=True, serialize=False, verbose_name='EmailAddress ID')),
                ('EM_ADS_LOC_PRT', models.CharField(max_length=253, verbose_name='Email Address Local Part')),
                ('EM_ADS_DMN_PRT', models.CharField(max_length=253, verbose_name='Email Address Domain Part')),
            ],
            options={
                'db_table': 'LO_EML_ADS',
            },
        ),
        migrations.CreateModel(
            name='GeographicSegment',
            fields=[
                ('ID_GEO_SGMT', models.BigAutoField(primary_key=True, serialize=False, verbose_name='GeographicSegment ID')),
                ('DE_GEO_SGMT_CLSFR', models.CharField(blank=True, max_length=255, null=True, verbose_name='GeographicSegment Description')),
            ],
            options={
                'db_table': 'CO_GEO_SGMT',
            },
        ),
        migrations.CreateModel(
            name='ISO3166_1Country',
            fields=[
                ('CD_CY_ISO', models.CharField(max_length=2, primary_key=True, serialize=False, verbose_name='ISOCountryCode')),
                ('NM_CY', models.CharField(max_length=40, verbose_name='CountryName')),
                ('CD_ISO_3CHR_CY', models.CharField(blank=True, max_length=4, null=True, verbose_name='Three Character CountryCode')),
            ],
            options={
                'db_table': 'LO_CY_ISO',
            },
        ),
        migrations.CreateModel(
            name='ISO3166_2PrimarySubdivisionType',
            fields=[
                ('CD_ISO3166_CY_PRMRY_SBDVN_TYP', models.CharField(max_length=20, primary_key=True, serialize=False, verbose_name='ISO3166_CountryPrimarySubdivisionTypeCode')),
                ('DE_ISO3166_CY_PRMRY_SBDVN_TYP', models.CharField(blank=True, max_length=255, null=True, verbose_name='ISO3166_CountryPrimarySubdivisionDescription')),
            ],
            options={
                'db_table': 'LU_ISO3166_2_PRMRY_SBDVN_TYP',
            },
        ),
        migrations.CreateModel(
            name='ITUCountry',
            fields=[
                ('CD_CY_ITU', models.CharField(max_length=3, primary_key=True, serialize=False, verbose_name='ITU Country Code')),
                ('NM_CY_ITU', models.CharField(max_length=40, verbose_name='ITU Country Name')),
            ],
            options={
                'db_table': 'LO_CY_ITU',
            },
        ),
        migrations.CreateModel(
            name='Language',
            fields=[
                ('ID_LGE', models.CharField(max_length=4, primary_key=True, serialize=False, verbose_name='LanguageID')),
                ('NM_LGE', models.CharField(max_length=40, verbose_name='Name')),
            ],
            options={
                'db_table': 'CO_LGE',
            },
        ),
        migrations.CreateModel(
            name='Party',
            fields=[
                ('ID_PRTY', models.BigAutoField(primary_key=True, serialize=False, verbose_name='Party ID')),
            ],
            options={
                'db_table': 'PA_PRTY',
            },
        ),
        migrations.CreateModel(
            name='PartyRole',
            fields=[
                ('TY_RO_PRTY', models.CharField(max_length=6, primary_key=True, serialize=False, verbose_name='PartyRole Type Code')),
                ('NM_RO_PRTY', models.CharField(max_length=40, verbose_name='Name')),
                ('DE_RO_PRTY', models.TextField(blank=True, null=True, verbose_name='Description')),
            ],
            options={
                'db_table': 'PA_RO_PRTY_TYP',
            },
        ),
        migrations.CreateModel(
            name='PartyType',
            fields=[
                ('CD_PRTY_TYP', models.CharField(max_length=20, primary_key=True, serialize=False, verbose_name='PartyType Code')),
                ('DE_PRTY_TYP', models.CharField(blank=True, max_length=255, null=True, verbose_name='PartyType Description')),
            ],
            options={
                'db_table': 'LU_PA_TYP',
            },
        ),
        migrations.CreateModel(
            name='SocialNetworkType',
            fields=[
                ('CD_SCL_NTWRK_TYP', models.CharField(max_length=20, primary_key=True, serialize=False, verbose_name='SocialNetworkTypeCode')),
                ('DE_SCL_NTWRK_TYP', models.CharField(blank=True, max_length=255, null=True, verbose_name='SocialNetworkTypeDescription')),
            ],
            options={
                'db_table': 'LU_SCL_NTWRK_TYP',
            },
        ),
        migrations.CreateModel(
            name='WebSite',
            fields=[
                ('ID_WB_STE', models.BigAutoField(primary_key=True, serialize=False, verbose_name='WebSiteID')),
                ('URI_HM_PG', models.CharField(max_length=255, verbose_name='HomePageURIName')),
                ('NM_WB_STE_BSN', models.CharField(max_length=255, verbose_name='WebSiteBusinessName')),
                ('NM_WB_STE_TTL_TG', models.CharField(blank=True, max_length=255, null=True, verbose_name='WebSiteTitleTagValue')),
                ('DE_WB_STE_MTA_DSCR_TG_VL', models.CharField(blank=True, max_length=255, null=True, verbose_name='WebSiteMetaDescriptionTagValue')),
                ('NA_WB_STE_KYWRD_LST', models.TextField(blank=True, null=True, verbose_name='WebSiteMetaKeywordListNarrative')),
            ],
            options={
                'db_table': 'LO_WB_STE',
            },
        ),
        migrations.CreateModel(
            name='Telephone',
            fields=[
                ('ID_PH', models.BigAutoField(primary_key=True, serialize=False, verbose_name='Telephone ID')),
                ('TA_PH', models.CharField(max_length=5, verbose_name='AreaCode')),
                ('TL_PH', models.CharField(max_length=20, verbose_name='TelephoneNumber')),
                ('PH_EXTN', models.CharField(blank=True, max_length=5, null=True, verbose_name='ExtensionNumber')),
                ('PH_CMPL', models.CharField(max_length=32, verbose_name='CompleteNumber')),
                ('CD_CY_ITU', models.ForeignKey(db_column='CD_CY_ITU', on_delete=django.db.models.deletion.CASCADE, to='party.itucountry', verbose_name='ITU Country Code')),
            ],
            options={
                'db_table': 'LO_PH',
            },
        ),
        migrations.CreateModel(
            name='SocialNetworkService',
            fields=[
                ('ID_SCL_NTWRK', models.BigAutoField(primary_key=True, serialize=False, verbose_name='SocialNetworkID')),
                ('NM_SCL_NTWRK', models.CharField(max_length=40, verbose_name='SocialNetworkName')),
                ('CD_SCL_NTWRK_TYP', models.ForeignKey(db_column='CD_SCL_NTWRK_TYP', on_delete=django.db.models.deletion.CASCADE, to='party.socialnetworktype', verbose_name='SocialNetworkTypeCode')),
                ('ID_WB_STE', models.ForeignKey(db_column='ID_WB_STE', on_delete=django.db.models.deletion.CASCADE, to='party.website', verbose_name='WebSiteID')),
            ],
            options={
                'db_table': 'PA_SCL_NTWRK',
            },
        ),
        migrations.CreateModel(
            name='SocialNetworkHandle',
            fields=[
                ('ID_SCL_NTWRK_HNDL', models.BigAutoField(primary_key=True, serialize=False, verbose_name='SocialNetworkUserID')),
                ('ID_SCL_NTWRK_USR', models.CharField(max_length=255, verbose_name='UserProfileID')),
                ('ID_SCL_NTWRK', models.ForeignKey(db_column='ID_SCL_NTWRK', on_delete=django.db.models.deletion.CASCADE, to='party.socialnetworkservice', verbose_name='SocialNetworkID')),
            ],
            options={
                'db_table': 'PA_SCL_NTWRK_HNDL',
            },
        ),
        migrations.CreateModel(
            name='PostalCodeReference',
            fields=[
                ('ID_PSTL_CD', models.BigAutoField(primary_key=True, serialize=False, verbose_name='PostalCode ID')),
                ('CD_PSTL', models.CharField(max_length=20, verbose_name='PostalCode')),
                ('DE_PSTL_CD', models.CharField(blank=True, max_length=255, null=True, verbose_name='PostalCode Description')),
                ('CD_PSTL_EXTN', models.CharField(blank=True, max_length=4, null=True, verbose_name='PostalCode Extension')),
                ('CD_CY_ISO', models.ForeignKey(db_column='CD_CY_ISO', on_delete=django.db.models.deletion.CASCADE, to='party.iso3166_1country', verbose_name='ITU Country Code')),
            ],
            options={
                'db_table': 'LU_PSTL_CD_RFC',
            },
        ),
        migrations.CreateModel(
            name='Person',
            fields=[
                ('ID_PRTY_PRS', models.BigAutoField(primary_key=True, serialize=False, verbose_name='PersonPartyID')),
                ('NM_PRS_SLN', models.CharField(blank=True, max_length=40, null=True, verbose_name='Salutation')),
                ('FN_PRS', models.CharField(max_length=40, verbose_name='FirstName')),
                ('TY_NM_FS', models.CharField(blank=True, max_length=2, null=True, verbose_name='FirstNameType')),
                ('MD_PRS', models.CharField(blank=True, max_length=40, null=True, verbose_name='MiddleNames')),
                ('TY_NM_MID', models.CharField(blank=True, max_length=2, null=True, verbose_name='MiddleNameType')),
                ('LN_PRS', models.CharField(max_length=40, verbose_name='LastName')),
                ('TY_NM_LS', models.CharField(blank=True, max_length=2, null=True, verbose_name='LastNameType')),
                ('NM_PRS_SFX', models.CharField(blank=True, max_length=40, null=True, verbose_name='Suffix')),
                ('TY_GND_PRS', models.CharField(blank=True, max_length=2, null=True, verbose_name='GenderTypeCode')),
                ('NM_PRS_SR', models.CharField(max_length=40, verbose_name='SortingName')),
                ('NM_PRS_ML', models.CharField(max_length=40, verbose_name='MailingName')),
                ('NM_PRS_OFCL', models.CharField(max_length=40, verbose_name='OfficialName')),
                ('PRS_CRT_DT', models.DateTimeField(auto_now_add=True, verbose_name='Created Date')),
                ('PRS_MDF_DT', models.DateTimeField(auto_now=True, verbose_name='Modified Date')),
                ('ID_LGE', models.ForeignKey(blank=True, db_column='ID_LGE', null=True, on_delete=django.db.models.deletion.SET_NULL, to='party.language', verbose_name='LanguageID')),
                ('ID_PRTY', models.ForeignKey(db_column='ID_PRTY', on_delete=django.db.models.deletion.CASCADE, to='party.party', verbose_name='Party ID')),
                ('PRS_CRT_BY', models.ForeignKey(blank=True, db_column='PRS_CRT_BY', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='PRS_Createuser', to=settings.AUTH_USER_MODEL)),
                ('PRS_MDF_BY', models.ForeignKey(blank=True, db_column='PRS_MDF_BY', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='PRS_Modifiyuser', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'PA_PRS',
            },
        ),
        migrations.CreateModel(
            name='PartyRoleAssignment',
            fields=[
                ('ID_PRTY_RO_ASGMT', models.BigAutoField(primary_key=True, serialize=False, verbose_name='PartyRoleAssignment ID')),
                ('SC_RO_PRTY', models.CharField(choices=[('A', 'Active'), ('I', 'Inactive')], default='A', max_length=2, verbose_name='Status Code')),
                ('DC_EF_RO_PRTY', models.DateTimeField(verbose_name='Effective Date')),
                ('DC_EP_RO_PRTY', models.DateTimeField(verbose_name='ExpirationDate')),
                ('ID_PRTY', models.ForeignKey(db_column='ID_PRTY', on_delete=django.db.models.deletion.CASCADE, to='party.party', verbose_name='Party ID')),
                ('TY_RO_PRTY', models.ForeignKey(db_column='TY_RO_PRTY', on_delete=django.db.models.deletion.CASCADE, to='party.partyrole', verbose_name='PartyRole Type Code')),
            ],
            options={
                'db_table': 'PA_RO_PRTY',
            },
        ),
        migrations.CreateModel(
            name='PartyContactMethod',
            fields=[
                ('ID_PRTY_CNCT_MTH', models.BigAutoField(primary_key=True, serialize=False, verbose_name='PartyContactMethodID')),
                ('DC_EF', models.DateTimeField(verbose_name='EffectiveDateTime')),
                ('DC_EP', models.DateTimeField(verbose_name='ExpirationDateTime')),
                ('CD_STS', models.CharField(choices=[('A', 'Active'), ('I', 'Inactive')], default='A', max_length=2, verbose_name='StatusCode')),
                ('PCM_CRT_DT', models.DateTimeField(auto_now_add=True, verbose_name='Created Date')),
                ('PCM_MDF_DT', models.DateTimeField(auto_now=True, verbose_name='Modified Date')),
                ('CD_TYP_CNCT_MTH', models.ForeignKey(db_column='CD_TYP_CNCT_MTH', on_delete=django.db.models.deletion.CASCADE, to='party.contactmethodtype', verbose_name='ContactMethodTypeCode')),
                ('CD_TYP_CNCT_PRPS', models.ForeignKey(db_column='CD_TYP_CNCT_PRPS', on_delete=django.db.models.deletion.CASCADE, to='party.contactpurposetype', verbose_name='ContactPurposeTypeCode')),
                ('ID_ADS', models.ForeignKey(db_column='ID_ADS', on_delete=django.db.models.deletion.CASCADE, to='party.address', verbose_name='AddressID')),
                ('ID_EM_ADS', models.ForeignKey(db_column='ID_EM_ADS', on_delete=django.db.models.deletion.CASCADE, to='party.emailaddress', verbose_name='EmailAddressID')),
                ('ID_PH', models.ForeignKey(db_column='ID_PH', on_delete=django.db.models.deletion.CASCADE, to='party.telephone', verbose_name='TelephoneID')),
                ('ID_PRTY_RO_ASGMT', models.ForeignKey(db_column='ID_PRTY_RO_ASGMT', on_delete=django.db.models.deletion.CASCADE, to='party.partyroleassignment', verbose_name='PartyRoleAssignmentID')),
                ('ID_SCL_NTWRK_HNDL', models.ForeignKey(db_column='ID_SCL_NTWRK_HNDL', on_delete=django.db.models.deletion.CASCADE, to='party.socialnetworkhandle', verbose_name='SocialNetworkUserID')),
                ('ID_WB_STE', models.ForeignKey(db_column='ID_WB_STE', on_delete=django.db.models.deletion.CASCADE, to='party.website', verbose_name='WebSiteID')),
                ('PCM_CRT_BY', models.ForeignKey(blank=True, db_column='PCM_CRT_BY', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='PC_Createuser', to=settings.AUTH_USER_MODEL)),
                ('PCM_MDF_BY', models.ForeignKey(blank=True, db_column='PCM_MDF_BY', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='PC_Modifiyuser', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'CO_MTH_CNCT_PTY',
            },
        ),
        migrations.AddField(
            model_name='party',
            name='CD_PRTY_TYP',
            field=models.ForeignKey(db_column='CD_PRTY_TYP', on_delete=django.db.models.deletion.CASCADE, to='party.partytype', verbose_name='Party Type'),
        ),
        migrations.CreateModel(
            name='OperationalParty',
            fields=[
                ('ID_OPR_PRTY', models.BigAutoField(primary_key=True, serialize=False, verbose_name='OperationalPartyID')),
                ('TY_PRTY_OPR', models.CharField(max_length=2, verbose_name='OperatingPartyTypeCode')),
                ('ID_PRTY_RO_ASGMT', models.ForeignKey(db_column='ID_PRTY_RO_ASGMT', on_delete=django.db.models.deletion.CASCADE, to='party.partyroleassignment', verbose_name='PartyRoleAssignmentID')),
            ],
            options={
                'db_table': 'PA_PRTY_OPR',
            },
        ),
        migrations.CreateModel(
            name='ISO3166_2CountrySubdivision',
            fields=[
                ('ID_ISO_3166_2_CY_SBDVN', models.BigAutoField(primary_key=True, serialize=False, verbose_name='ISO_3166_2CountrySubDivisionID')),
                ('ID_ISO_3166_2_CY_PRMRY_SBDVN', models.IntegerField(unique=True, verbose_name='ISOCountryPrimarySubdivisionID')),
                ('CD_ISO_3_CHR_CY', models.CharField(max_length=4, verbose_name='ISOThreeCharacterCountryCode')),
                ('NM_ISO_CY_PRMRY_SBDVN', models.CharField(max_length=40, verbose_name='ISOCountryPrimarySubDivisionName')),
                ('CD_ISO_CY_PRMRY_SBDVN_ABBR_CD', models.CharField(blank=True, max_length=6, null=True, verbose_name='ISOCountryPrimarySubDivisionAbbreviationCode')),
                ('DE_ISO_SBDVN_ALT_NM', models.CharField(blank=True, max_length=255, null=True, verbose_name='ISOSubdivisionAlternateNameDescription')),
                ('NM_ISO_CY', models.CharField(max_length=40, verbose_name='ISOCountryName')),
                ('CD_CY_ISO', models.ForeignKey(db_column='CD_CY_ISO', on_delete=django.db.models.deletion.CASCADE, to='party.iso3166_1country', verbose_name='ISOCountryCode')),
                ('CD_ISO3166_CY_PRMRY_SBDVN_TYP', models.ForeignKey(db_column='CD_ISO3166_CY_PRMRY_SBDVN_TYP', on_delete=django.db.models.deletion.CASCADE, to='party.iso3166_2primarysubdivisiontype', verbose_name='ISO3166_CountryPrimarySubdivisionTypeCode')),
            ],
            options={
                'db_table': 'CO_ISO3166_2_PRMRY_SBDVN',
            },
        ),
        migrations.AddField(
            model_name='iso3166_1country',
            name='CD_CY_ITU',
            field=models.ForeignKey(db_column='CD_CY_ITU', on_delete=django.db.models.deletion.CASCADE, to='party.itucountry', verbose_name='ITU Country Code'),
        ),
        migrations.CreateModel(
            name='Consumer',
            fields=[
                ('ID_CNS', models.CharField(max_length=20, primary_key=True, serialize=False, verbose_name='SocialNetworkTypeCode')),
                ('ID_PRTY', models.ForeignKey(db_column='ID_PRTY', on_delete=django.db.models.deletion.CASCADE, to='party.party', verbose_name='PartyID')),
                ('ID_PRTY_RO_ASGMT', models.ForeignKey(db_column='ID_PRTY_RO_ASGMT', on_delete=django.db.models.deletion.CASCADE, to='party.partyroleassignment', verbose_name='PartyRoleAssignmentID')),
            ],
            options={
                'db_table': 'PA_CNS',
            },
        ),
        migrations.AddField(
            model_name='address',
            name='ID_GEO_SGMT',
            field=models.ForeignKey(blank=True, db_column='ID_GEO_SGMT', null=True, on_delete=django.db.models.deletion.CASCADE, to='party.geographicsegment', verbose_name='Geographic Segment ID'),
        ),
        migrations.AddField(
            model_name='address',
            name='ID_ISO_3166_2_CY_SBDVN',
            field=models.ForeignKey(blank=True, db_column='ID_ISO_3166_2_CY_SBDVN', null=True, on_delete=django.db.models.deletion.CASCADE, to='party.iso3166_2countrysubdivision', verbose_name='CountrySubdivision'),
        ),
        migrations.AddField(
            model_name='address',
            name='ID_PSTL_CD',
            field=models.ForeignKey(blank=True, db_column='ID_PSTL_CD', null=True, on_delete=django.db.models.deletion.CASCADE, to='party.postalcodereference', verbose_name='Postal Code ID'),
        ),
    ]
